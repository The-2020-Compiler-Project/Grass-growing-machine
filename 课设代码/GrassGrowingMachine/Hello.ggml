#ggml:grass-growing-machine language （这是个单行注释）
program p1; #程序开始动作
var #先声明全局变量，便于函数访问
{
    int a; int b; int c;
    real f; char ch; #没有const
}
function #函数声明
{
    int f1
    {
        args #参数定义
        {
            val{int a; char b;} #赋值形参
            ptr{int pa;} #换名形参
        }
        var #临时变量定义
        {
            int tmp;
        }
        body #函数体
        {
            tmp = a * 2;
            if (tmp <= 0)
            {
                return 0;
            }
            else
            {
                tmp = a+2;
                pa = 5;
                return tmp+2;
            }
            return 1;
        }
    }
    int f2
    {
        args #参数定义
        {
            val{int a; char b;} #赋值形参
            ptr{int pa;} #换名形参
        }
        var #临时变量定义
        {
            int tmp;
        }
        body #函数体
        {
            tmp = a * 2;
            if (tmp <= 0)
            {
                return 0;
            }
            else
            {
                tmp = a+2;
                pa = 5;
                return tmp+2;
            }
            return 1;
        }
    }
}
body
{
    a = 1;
    b = 2;
    c = 3;
    a = a+b;
    a = f1(a;b+1;c;);
    putc(a+48;); #ascii
    putc(c+48;); #ascii
    endp; #程序结束动作
}